//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GadgeteerApp1 {
    using Gadgeteer;
    using GTM = Gadgeteer.Modules;
    
    
    public partial class Program : Gadgeteer.Program {
        
        /// <summary>The Button module using socket 4 of the mainboard.</summary>
        private Gadgeteer.Modules.GHIElectronics.Button button;
        
        /// <summary>The Extender module using socket 11 of the mainboard.</summary>
        private Gadgeteer.Modules.GHIElectronics.Extender extender;
        
        /// <summary>The CAN_DW (Premium) module using socket 6 of the mainboard.</summary>
        private Gadgeteer.Modules.GHIElectronics.CAN_DW can_dw;
        
        /// <summary>The UsbClientDP module using socket 1 of the mainboard.</summary>
        private Gadgeteer.Modules.GHIElectronics.UsbClientDP usbClientDP;
        
        /// <summary>The Relay X1 module using socket 14 of the mainboard.</summary>
        private Gadgeteer.Modules.GHIElectronics.Relay_X1 relay_X1;
        
        /// <summary>The Extender module using socket 8 of the mainboard.</summary>
        private Gadgeteer.Modules.GHIElectronics.Extender extender2;
        
        /// <summary>The UsbSerial module using socket 9 of the mainboard.</summary>
        private Gadgeteer.Modules.GHIElectronics.UsbSerial usbSerial;
        
        /// <summary>The Joystick module using socket 10 of the mainboard.</summary>
        private Gadgeteer.Modules.GHIElectronics.Joystick joystick;
        
        /// <summary>The MulticolorLed module using socket 5 of the mainboard.</summary>
        private Gadgeteer.Modules.GHIElectronics.MulticolorLed multicolorLed;
        
        /// <summary>This property provides access to the Mainboard API. This is normally not necessary for an end user program.</summary>
        protected new static GHIElectronics.Gadgeteer.FEZSpider Mainboard {
            get {
                return ((GHIElectronics.Gadgeteer.FEZSpider)(Gadgeteer.Program.Mainboard));
            }
            set {
                Gadgeteer.Program.Mainboard = value;
            }
        }
        
        /// <summary>This method runs automatically when the device is powered, and calls ProgramStarted.</summary>
        public static void Main() {
            // Important to initialize the Mainboard first
            Program.Mainboard = new GHIElectronics.Gadgeteer.FEZSpider();
            Program p = new Program();
            p.InitializeModules();
            p.ProgramStarted();
            // Starts Dispatcher
            p.Run();
        }
        
        private void InitializeModules() {
            this.button = new GTM.GHIElectronics.Button(4);
            this.extender = new GTM.GHIElectronics.Extender(11);
            this.can_dw = new GTM.GHIElectronics.CAN_DW(6);
            this.usbClientDP = new GTM.GHIElectronics.UsbClientDP(1);
            this.relay_X1 = new GTM.GHIElectronics.Relay_X1(14);
            this.extender2 = new GTM.GHIElectronics.Extender(8);
            this.usbSerial = new GTM.GHIElectronics.UsbSerial(9);
            this.joystick = new GTM.GHIElectronics.Joystick(10);
            this.multicolorLed = new GTM.GHIElectronics.MulticolorLed(5);
        }
    }
}
